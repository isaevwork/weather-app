import React, {useRef, useState} from 'react';import {ReactComponent as IconSearch} from '../../shared/icons/searchIcon.svg'import {ReactComponent as GeoIcon} from "../../shared/icons/geoIcon.svg";import './CityImage.css';type CityImageProps = {    imageUrl: any;    setCity: (city: string) => void;    randomIdx: number;    country: string;    countryCity: string;}const CityImage = (props: CityImageProps) => {    const {        imageUrl,        setCity,        randomIdx,        country,        countryCity    } = props;    const [inputValue, setInputValue] = useState<string>('');    const inputRef = useRef<HTMLInputElement>(null);    const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {        if (e.key === 'Enter') {            setCity(inputValue);            setInputValue("");        }    }    const handleClick = () => {        setCity(inputValue);        setInputValue("");        inputRef.current?.focus();    }    const handleBlur = () => {        setInputValue("");    }    let imageCity = null;    if (imageUrl.length > 0) {        imageCity = imageUrl[randomIdx];    }    return (        <div className={"flex relative"}>            {imageCity && (                <img                    src={imageCity.largeImageURL}                    alt="city"                    className={"bg-black opacity-80 blur-[1px] h-[450px] w-[1000px] rounded-t-lg object-cover"}                />            )}            {!imageCity && (                <img                    src={require("../../shared/images/mos.jpeg")}                    alt="city"                    className={"bg-black opacity-60 h-[450px] w-[1000px] rounded-t-lg"}                />            )}            <div className={"flex absolute w-[400px] h-[80px] top-10 left-10"}>                <div className={"flex w-full h-full"}>                    <button                        onClick={handleClick}                        className={"flex items-center w-[60px] h-full p-3 hover:scale-90 transition-all"}                    >                        <IconSearch width={'30px'} height={'30px'} className={"pl-1 z-10"}/>                        <div                            className={"flex absolute z-0 left-0 top-0 w-[60px] h-[80px] rounded-[10px] bg-gray-200 opacity-30"}></div>                    </button>                    <input                        type="text"                        className={"flex justify-center rounded-lg bg-transparent border-none outline-0 text-white text-3xl"}                        value={inputValue}                        onChange={(e) => setInputValue(e.target.value)}                        onKeyDown={handleKeyPress}                        onBlur={handleBlur}                        style={{                            width: `${Math.max(60, inputValue.length * 25)}px`,                            display: 'flex',                            paddingLeft: '20px'                        }}                        ref={inputRef}                    />                </div>            </div>            {country &&                <div className={"flex absolute right-20 top-10 w-[180px] h-[80px]  text-white"}>                    <div className={"flex items-center"}>                        <GeoIcon width={'50px'} height={'50px'} fill={"white"} className={"z-10 pl-2"}/>                        <div className={"flex z-10 flex-col justify-center pl-2"}>                            {countryCity &&                                <div className={"text-white"}>{`${countryCity}`}</div>                            }                            <div className={"text-white"}>{country}</div>                        </div>                    </div>                    <div                        className={"flex absolute z-0 right-[-1] top-0 w-[220px] h-[80px] rounded-[10px] bg-gray-200 opacity-30"}></div>                </div>            }        </div>    );};export default CityImage;